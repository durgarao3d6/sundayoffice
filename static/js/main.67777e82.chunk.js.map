{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/MenuComponent.js","components/DishDetailComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/HomeComponent.js","components/ContactUsComponent.js","components/AboutUsComponents.js","redux/ActionTypes.js","redux/ActionCreators.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","reportWebVitals.js","index.js"],"names":["Loading","className","baseUrl","RenderMenuItem","dish","Card","to","id","CardImg","width","src","image","alt","name","CardImgOverlay","CardTitle","Menu","props","dishes","isLoading","errMess","menu","map","Breadcrumb","BreadcrumbItem","active","CommentForm","state","rating","author","comment","isModalOpen","touched","toggleModal","bind","this","setState","values","postComment","dishId","len","Button","color","onClick","Modal","isOpen","toggle","ModalHeader","ModalBody","onSubmit","handleSubmit","Row","Col","Label","htmlFor","select","model","text","validators","required","val","length","minLength","maxLength","show","messages","textarea","rows","type","React","Component","RenderComments","comments","addComment","in","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","DishDetailComponent","transformProps","exitTransform","CardBody","CardText","description","Header","isNavOpen","toggleNav","handleLogin","event","alert","username","value","password","remember","checked","preventDefault","Fragment","Navbar","dark","expand","NavbarToggler","NavbarBrand","href","height","Collapse","navbar","Nav","NavItem","Jumbotron","Form","FormGroup","Input","innerRef","input","check","Footer","RenderCard","item","designation","CardSubtitle","Home","dishesLoading","dishesErrMess","promotion","promoLoading","promoErrMess","leader","leaderLoading","leaderErrMess","Contact","handleBlur","field","evt","firstname","lastname","telnum","email","agree","contactType","message","handleInputChange","errors","test","split","filter","x","console","log","JSON","stringify","resetFeedbackForm","target","role","style","display","textAlign","md","placeholder","isNumber","isNaN","Number","validEmail","size","offset","checkbox","RenderLeader","Media","tag","left","middle","object","body","heading","About","leaders","CardHeader","title","list","ADD_COMMENT","DISHES_LOADING","DISHES_FAILED","ADD_DISHES","ADD_COMMENTS","COMMENTS_FAILED","PROMOS_LOADING","ADD_PROMOS","PROMOS_FAILED","LEADERS_LOADING","ADD_LEADERS","LEADERS_FAILED","dispatch","ActionTypes","payload","dishesFailed","errmess","addDishes","addComments","promosLoading","addPromos","promos","leadersLoading","addLeaders","Main","selectedDish","fetchDishes","fetchComments","fetchPromos","fetchLeaders","TransitionGroup","CSSTransition","classNames","timeout","location","path","component","featured","dishErrMess","promotions","promo","exact","onDishSelect","match","parseInt","params","commentsErrMess","key","withRouter","connect","fetch","then","response","ok","error","Error","status","statusText","json","catch","actions","reset","newComment","toISOString","method","headers","credentials","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","App","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.67777e82.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent'\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n\r\nfunction RenderMenuItem({ dish }) {\r\n    return (\r\n        <Card>\r\n            <Link to={`/menu/${dish.id}`}>\r\n                <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                <CardImgOverlay>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                </CardImgOverlay>\r\n            </Link>\r\n        </Card>\r\n    );\r\n}\r\n\r\n\r\n\r\nconst Menu = (props) => {\r\n    if (props.dishes.isLoading) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.dishes.errMess) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <h4>{props.dishes.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n        const menu = props.dishes.map((dish) => {\r\n            return (\r\n                <div className=\"col-12 col-md-5 m-1\" key={dish.id}>\r\n                    <RenderMenuItem dish={dish} />\r\n                </div>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"./home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <h3>Menu</h3><hr />\r\n                </div>\r\n                <div className=\"row\">\r\n                    {menu}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Menu;","/* eslint-disable react/jsx-pascal-case */\r\n/* eslint-disable react/jsx-no-comment-textnodes */\r\nimport React from 'react';\r\nimport { Card, CardImg, CardBody, CardTitle, CardText, Breadcrumb, BreadcrumbItem, Button, Modal, ModalBody, ModalHeader, Label, Row, Col } from 'reactstrap';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n\r\n\r\nclass CommentForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            rating: 1,\r\n            author: '',\r\n            comment: '',\r\n            isModalOpen: false,\r\n            touched: {\r\n                author: false,\r\n                comment: false,\r\n            }\r\n        }\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleSubmit(values) {     \r\n        this.toggleModal(); \r\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment); \r\n        \r\n    }\r\n\r\n    render() {\r\n        const required = (val) => val && val.length;\r\n        const maxLength = (len) => (val) => !(val) || (val.length <= len);\r\n        const minLength = (len) => (val) => val && (val.length >= len);\r\n        return (\r\n            <div>\r\n                <Button color=\"primary\" onClick={this.toggleModal}><span className=\"fa fa-sign-in fa-lg\"></span>AddComment</Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Add Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row>\r\n                                <Col>\r\n                                    <Label htmlFor=\"rating\">Rating</Label>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col>\r\n                                    <Control.select model=\".rating\" name=\"rating\"\r\n                                        className=\"form-control\">\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col>\r\n                                    <Label htmlFor=\"author\">Author</Label>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col>\r\n                                    <Control.text model=\".author\" name=\"author\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }} />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".author\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 3 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col>\r\n                                    <Label htmlFor=\"comment\">Comment</Label>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col>\r\n                                    <Control.textarea model=\".comment\" name=\"comment\"\r\n                                        className=\"form-control\" rows=\"12\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Add\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction RenderComments({ comments, addComment, dishId ,postComment}) {\r\n    return (\r\n        <>\r\n            <Stagger in>\r\n                {comments.map((comment) => {\r\n                    return (\r\n                        <Fade in>\r\n                            <li key={comment.id}>\r\n                                <p>{comment.comment}</p>\r\n                                <p>-- {comment.author} , {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit' }).format(new Date(Date.parse(comment.date)))}</p>\r\n                            </li>\r\n                        </Fade>\r\n                    );\r\n                })}\r\n            </Stagger>\r\n            <CommentForm dishId={dishId} postComment={postComment} />\r\n        </>\r\n\r\n    )\r\n};\r\n\r\n\r\nfunction DishDetailComponent(props) {\r\n    if (props.isLoading) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.errMess) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{props.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.dish == null || props.comments == null) {\r\n        return (\r\n            <div></div>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.dish.name}</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-md-6 mb-4\">\r\n                        <FadeTransform\r\n                            in\r\n                            transformProps={{\r\n                                exitTransform: 'scale(0.5) translateY(-50%)'\r\n                            }}>\r\n                            <Card>\r\n                                <CardImg src={baseUrl + props.dish.image}></CardImg>\r\n                                <CardBody>\r\n                                    <CardTitle>{props.dish.name}</CardTitle>\r\n                                    <CardText>{props.dish.description}</CardText>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </FadeTransform>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <h1>Comments</h1>\r\n                        <ul>\r\n                            <RenderComments comments={props.comments}\r\n                                addComment={props.addComment}\r\n                                dishId={props.dish.id}\r\n                                postComment={props.postComment}\r\n                            />\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>)\r\n    }\r\n}\r\n\r\nexport default DishDetailComponent;","import React, { Component } from 'react';\r\nimport {\r\n  Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron,\r\n  Button, Modal, ModalHeader, ModalBody,\r\n  Form, FormGroup, Input, Label\r\n} from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isNavOpen: false,\r\n      isModalOpen: false\r\n    }\r\n    this.toggleNav = this.toggleNav.bind(this);\r\n    this.toggleModal = this.toggleModal.bind(this);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n  }\r\n\r\n  toggleNav() {\r\n    this.setState({\r\n      isNavOpen: !this.state.isNavOpen\r\n    });\r\n  }\r\n\r\n  toggleModal() {\r\n    this.setState({\r\n      isModalOpen: !this.state.isModalOpen\r\n    });\r\n  }\r\n\r\n  handleLogin(event) {\r\n    this.toggleModal();\r\n    alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\r\n      + \" Remember: \" + this.remember.checked);\r\n    event.preventDefault();\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Navbar dark expand=\"md\">\r\n          <div className=\"container\">\r\n            <NavbarToggler onClick={this.toggleNav} />\r\n            <NavbarBrand className=\"mr-auto\" href=\"/\">\r\n              <img src=\"assets/images/logo2.png\" alt=\"logo\" height=\"40\" width=\"40\"></img>\r\n            </NavbarBrand>\r\n            <Collapse isOpen={this.state.isNavOpen} navbar>\r\n              <Nav navbar>\r\n                <NavItem>\r\n                  <NavLink className=\"nav-link\" to=\"/home\">\r\n                    <span className=\"fa fa-home fa-lg\"></span>Home\r\n                </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink className=\"nav-link\" to=\"/aboutus\">\r\n                    <span className=\"fa fa-info fa-lg\"></span>AboutUs\r\n                </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink className=\"nav-link\" to=\"/menu\">\r\n                    <span className=\"fa fa-list fa-lg\"></span>Menu\r\n                </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink className=\"nav-link\" to=\"/contactus\">\r\n                    <span className=\"fa fa-address-card fa-lg\"></span>ContactUs\r\n                </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n              <Nav className=\"ml-auto\" navbar>\r\n                <NavItem>\r\n                  <Button color=\"primary\" onClick={this.toggleModal}><span className=\"fa fa-sign-in fa-lg\"></span>LOGIN</Button>\r\n                </NavItem>\r\n              </Nav>\r\n            </Collapse>\r\n          </div>\r\n        </Navbar>\r\n        <Jumbotron>\r\n          <div className=\"container\">\r\n            <div className=\"row row-header\">\r\n              <div className=\"col-12 col-sm-6\">\r\n                <h1>Sunday Office Restaurent</h1>\r\n                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Jumbotron>\r\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n          <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n          <ModalBody>\r\n            <Form onSubmit={this.handleLogin}>\r\n              <FormGroup>\r\n                <Label htmlFor=\"username\">Username</Label>\r\n                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                  innerRef={(input) => this.username = input} />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label htmlFor=\"password\">Password</Label>\r\n                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                  innerRef={(input) => this.password = input} />\r\n              </FormGroup>\r\n              <FormGroup check>\r\n                <Label check>\r\n                  <Input type=\"checkbox\" name=\"remember\"\r\n                    innerRef={(input) => this.remember = input} />\r\n                                    Remember me\r\n                                </Label>\r\n              </FormGroup>\r\n              <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n\r\n            </Form>\r\n          </ModalBody>\r\n        </Modal>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer(props) {\r\n    return (\r\n        <div className=\"footer\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-4 offset-1 col-sm-2\">\r\n                        <h5>Links</h5>\r\n                        <ul className=\"list-unstyled\">\r\n                            <li><Link to='/home'>Home</Link></li>\r\n                            <li><Link to='/aboutus'>About Us</Link></li>\r\n                            <li><Link to='/menu'>Menu</Link></li>\r\n                            <li><Link to='/contactus'>Contact Us</Link></li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"col-7 col-sm-5\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            121, Near Clock Tower<br />\r\n\t\t              Amalapuram, EastGodavari District,<br />\r\n\t\t              Amalapuram<br />\r\n                            <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:durgrao@gmil.com\">\r\n                                durgarao@sundayoffice.in</a>\r\n                        </address>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-auto\">\r\n                        <p>© Copyright 2021 Sunday Office PVT Ltd.</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport {\r\n    Card, CardImg, CardText, CardBody,\r\n    CardTitle, CardSubtitle\r\n} from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport { FadeTransform } from 'react-animation-components';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nfunction RenderCard({ item, isLoading, errMess }) {\r\n    if (isLoading) {\r\n        return (\r\n            <Loading />\r\n        );\r\n    }\r\n    else if (errMess) {\r\n        return (\r\n            <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                <Card>\r\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                    <CardBody>\r\n                        <CardTitle>{item.name}</CardTitle>\r\n                        {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null}\r\n                        <CardText>{item.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nfunction Home(props) {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.dish} isLoading={props.dishesLoading} errMess={props.dishesErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.promotion} isLoading={props.promoLoading} errMess={props.promoErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.leader} isLoading={props.leaderLoading} errMess={props.leaderErrMess} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","/* eslint-disable react/jsx-pascal-case */\r\n/* eslint-disable react/jsx-no-comment-textnodes */\r\nimport React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Form, Errors, actions } from 'react-redux-form';\r\n\r\nclass Contact extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            firstname: '',\r\n            lastname: '',\r\n            telnum: '',\r\n            email: '',\r\n            agree: false,\r\n            contactType: 'Tel.',\r\n            message: '',\r\n            touched: {\r\n                firstname: false,\r\n                lastname: false,\r\n                telnum: false,\r\n                email: false\r\n            }\r\n        };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n\r\n    }\r\n\r\n    handleBlur = (field) => (evt) => {\r\n        this.setState({\r\n            touched: { ...this.state.touched, [field]: true }\r\n        });\r\n    }\r\n\r\n    validate(firstname, lastname, telnum, email) {\r\n        const errors = {\r\n            firstname: '',\r\n            lastname: '',\r\n            telnum: '',\r\n            email: ''\r\n        };\r\n\r\n        if (this.state.touched.firstname && firstname.length < 3)\r\n            errors.firstname = 'First Name should be >= 3 characters';\r\n        else if (this.state.touched.firstname && firstname.length > 10)\r\n            errors.firstname = 'First Name should be <= 10 characters';\r\n\r\n        if (this.state.touched.lastname && lastname.length < 3)\r\n            errors.lastname = 'Last Name should be >= 3 characters';\r\n        else if (this.state.touched.lastname && lastname.length > 10)\r\n            errors.lastname = 'Last Name should be <= 10 characters';\r\n\r\n        const reg = /^\\d+$/;\r\n        if (this.state.touched.telnum && !reg.test(telnum))\r\n            errors.telnum = 'Tel. Number should contain only numbers';\r\n\r\n        if (this.state.touched.email && email.split('').filter(x => x === '@').length !== 1)\r\n            errors.email = 'Email should contain a @';\r\n\r\n        return errors;\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        alert('Current State is: ' + JSON.stringify(values));\r\n        this.props.resetFeedbackForm();\r\n        // event.preventDefault();\r\n    }\r\n\r\n\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        const required = (val) => val && val.length;\r\n        const maxLength = (len) => (val) => !(val) || (val.length <= len);\r\n        const minLength = (len) => (val) => val && (val.length >= len);\r\n        const isNumber = (val) => !isNaN(Number(val));\r\n        const validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\" href=\"tel:+85212345678\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\" style={{ display: 'block' }}>\r\n                    <div className=\"col-12\">\r\n                        <h3 style={{ textAlign: 'center' }}>Send us your feedback</h3>\r\n                    </div>\r\n                    <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                            <Col md={10}>\r\n                                <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                    placeholder=\"FirstName\"\r\n                                    className=\"form-control\"\r\n                                    validators={{\r\n                                        required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                    }}\r\n                                />\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".firstname\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        minLength: 'Must be greater than 2 characters',\r\n                                        maxLength: 'Must be 15 characters or less'\r\n                                    }}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                            <Col md={10}>\r\n                                <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                    placeholder=\"Last Name\"\r\n                                    className=\"form-control\"\r\n                                    validators={{\r\n                                        required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                    }}\r\n                                />\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".lastname\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        minLength: 'Must be greater than 2 characters',\r\n                                        maxLength: 'Must be 15 characters or less'\r\n                                    }}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                            <Col md={10}>\r\n                                <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                    placeholder=\"Tel. Number\"\r\n                                    className=\"form-control\"\r\n                                    validators={{\r\n                                        required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                    }}\r\n                                />\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".telnum\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        minLength: 'Must be greater than 2 numbers',\r\n                                        maxLength: 'Must be 15 numbers or less',\r\n                                        isNumber: 'Must be a number'\r\n                                    }}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                            <Col md={10}>\r\n                                <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                    placeholder=\"Email\"\r\n                                    className=\"form-control\"\r\n                                    validators={{\r\n                                        required, validEmail\r\n                                    }}\r\n                                />\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".email\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        validEmail: 'Invalid Email Address'\r\n                                    }}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Col md={{ size: 6, offset: 2 }}>\r\n                                <div className=\"form-check\">\r\n                                    <Label check>\r\n                                        <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                            className=\"form-check-input\"\r\n                                        /> {' '}\r\n                                        <strong>May we contact you?</strong>\r\n                                    </Label>\r\n                                </div>\r\n                            </Col>\r\n                            <Col md={{ size: 3, offset: 1 }}>\r\n                                <Control.select model=\".contactType\" name=\"contactType\"\r\n                                    className=\"form-control\">\r\n                                    <option>Tel.</option>\r\n                                    <option>Email</option>\r\n                                </Control.select>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                            <Col md={10}>\r\n                                <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                    rows=\"12\"\r\n                                    className=\"form-control\" />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Col md={{ size: 10, offset: 2 }}>\r\n                                <Button type=\"submit\" color=\"primary\">\r\n                                    Send Feedback\r\n                                    </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nfunction RenderLeader({ leader }) {\r\n    return (\r\n        <Media tag=\"li\" className=\"mb-5\">\r\n            <Media left middle>\r\n                <Media object src={baseUrl +leader.image} alt={leader.name} />\r\n            </Media>\r\n            <Media body className=\"ml-5\">\r\n                <Media heading className=\"mb-2\">{leader.name}</Media>\r\n                <Media className=\"mb-2\"><span><i className=\"fa fa-briefcase mr-1\"></i>{leader.designation}</span></Media>\r\n                <p>{leader.description}</p>\r\n            </Media>\r\n        </Media>\r\n    )\r\n}\r\n\r\nfunction About(props) {\r\n\r\n    const leaders = props.leaders.map((leader) => {\r\n        return (\r\n            <div>               \r\n                <RenderLeader leader={leader}></RenderLeader>\r\n            </div>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">Coming soon..</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">Sunday Office PVT LTD.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$0,00,00,000</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">0</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Media list>\r\n                        {leaders}\r\n                    </Media>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nexport const addComment = (comment)  => (dispatch) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(dishes => dispatch(addDishes(dishes)))\r\n    .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const fetchComments = () => (dispatch) => {\r\n    return fetch(baseUrl + 'comments')\r\n        .then(response => response.json())\r\n        .then(comments => dispatch(addComments(comments)));\r\n};\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n\r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n        .then(response => response.json())\r\n        .then(promos => dispatch(addPromos(promos)));\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    };\r\n    newComment.date = new Date().toISOString();\r\n\r\n    return fetch(baseUrl + 'comments', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                throw error;\r\n            })\r\n        .then(response => response.json())\r\n        .then(response => dispatch(addComment(response)))\r\n        .catch(error => { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: ' + error.message); });\r\n};\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n\r\n    dispatch(leadersLoading());\r\n\r\n    return fetch(baseUrl + 'leaders')\r\n        .then(response => response.json())\r\n        .then(leaders=> dispatch(addLeaders(leaders)));\r\n}\r\n\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n});","import React, { Component } from 'react';\r\nimport Menu from './MenuComponent';\r\nimport DishDetail from './DishDetailComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport Home from './HomeComponent';\r\nimport Contact from './ContactUsComponent';\r\nimport AboutUs from './AboutUsComponents';\r\nimport { connect } from 'react-redux';\r\nimport { actions } from 'react-redux-form';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport { postComment, addComment, fetchDishes, fetchComments, fetchPromos, fetchLeaders } from '../redux/ActionCreators';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        dishes: state.dishes,\r\n        comments: state.comments,\r\n        promotions: state.promotions,\r\n        leaders: state.leaders\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    addComment: (dishId, rating, author, comment) => dispatch(addComment(dishId, rating, author, comment)),\r\n    fetchDishes: () => { dispatch(fetchDishes()) },\r\n    resetFeedbackForm: () => { dispatch(actions.reset('feedback')) },\r\n    fetchComments: () => dispatch(fetchComments()),\r\n    fetchPromos: () => dispatch(fetchPromos()),\r\n    fetchLeaders: () => { dispatch(fetchLeaders()) },\r\n    postComment: (dishId, rating, author, comment) => { dispatch(postComment(dishId, rating, author, comment)) }\r\n});\r\n\r\n\r\n\r\nclass Main extends Component {\r\n\r\n    onDishSelect(dishId) {\r\n        this.setState({ selectedDish: dishId });\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.props.fetchDishes();\r\n        this.props.fetchComments();\r\n        this.props.fetchPromos();\r\n        this.props.fetchLeaders();\r\n    }\r\n\r\n\r\n    render() {\r\n        const HomePage = () => {\r\n            return (\r\n                <Home\r\n                    dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n                    dishesLoading={this.props.dishes.isLoading}\r\n                    dishErrMess={this.props.dishes.errMess}\r\n                    promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n                    promoLoading={this.props.promotions.isLoading}\r\n                    promoErrMess={this.props.promotions.errMess}\r\n                    leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n                    leaderLoading={this.props.leaders.isLoading}\r\n                    leaderErrMess={this.props.leaders.errMess}\r\n                />\r\n            );\r\n        }\r\n\r\n        const DishWithId = ({ match }) => {\r\n            return (\r\n                <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId, 10))[0]}\r\n                    isLoading={this.props.dishes.isLoading}\r\n                    errMess={this.props.dishes.errMess}\r\n                    comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId, 10))}\r\n                    commentsErrMess={this.props.comments.errMess}\r\n                    addComment={this.props.addComment}\r\n                    postComment={this.props.postComment}\r\n                />\r\n            );\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <TransitionGroup>\r\n                    <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n                        <Switch location={this.props.location}>\r\n                            <Route path=\"/home\" component={HomePage} />\r\n                            <Route exact path=\"/menu\" component={() => <Menu dishes={this.props.dishes.dishes} onClick={(dishId) => this.onDishSelect(dishId)} />}></Route>\r\n                            <Route path='/menu/:dishId' component={DishWithId} />\r\n                            <Route exact path='/contactus' component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} />} />\r\n                            <Route path=\"/aboutus\" component={() => <AboutUs leaders={this.props.leaders.leaders}></AboutUs>}></Route>\r\n                            <Redirect to=\"/home\"></Redirect>\r\n                        </Switch>\r\n                    </CSSTransition>\r\n                </TransitionGroup>\r\n                <Footer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = { isLoading: true,\r\n    errMess: null,\r\n    dishes:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []}\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = { errMess: null, comments:[]}, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_COMMENTS:\r\n      return {...state, errMess: null, comments: action.payload};\r\n\r\n    case ActionTypes.COMMENTS_FAILED:\r\n      return {...state, errMess: action.payload};\r\n\r\n    case ActionTypes.ADD_COMMENT:\r\n        var comment = action.payload;     \r\n        return { ...state, comments: state.comments.concat(comment)};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state  = { isLoading: true,\r\n                                        errMess: null,\r\n                                        promotions:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n        return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state = { isLoading: true,\r\n    errMess: null,\r\n    leaders:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_LEADERS:\r\n            return {...state, isLoading: false, errMess: null, leaders: action.payload};\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, leaders: []}\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n};","import React, { Component } from 'react';\r\nimport Main from './components/MainComponent';\r\nimport './App.css';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { ConfigureStore } from './redux/configureStore'\r\n\r\nclass App extends Component {\r\n  render() {\r\n    const store = ConfigureStore();\r\n    return (\r\n      <Provider store={store}>\r\n        <BrowserRouter>\r\n          <div>\r\n            <Main />\r\n          </div>\r\n        </BrowserRouter>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\nimport thunk from 'redux-thunk';\r\nimport { createForms } from 'react-redux-form';\r\nimport { InitialFeedback } from './forms';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk)\r\n    );\r\n\r\n    return store;\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'font-awesome/css/font-awesome.css';\r\nimport 'bootstrap-social/bootstrap-social.css';\r\nimport App from './App';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}